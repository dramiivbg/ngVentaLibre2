{"version":3,"sources":["./src/app/servicioPago/stripe.service.ts","./src/app/components/pagoTargeta/select-targeta/select-targeta-routing.module.ts","./src/app/components/pagoTargeta/select-targeta/select-targeta.component.ts","./src/app/components/pagoTargeta/select-targeta/select-targeta.component.html","./node_modules/ngx-stripe/__ivy_ngcc__/fesm2015/ngx-stripe.js","./src/app/components/paypal/paypal.component.ts","./src/app/components/paypal/paypal.component.html","./src/app/components/pagoTargeta/select-targeta/select-targeta.module.ts"],"names":[],"mappings":"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kBAAkB;AACvB,KAAK;AACL;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B,uBAAuB,yDAAW;AAClC,aAAa,GAAG,GAAG,kBAAkB,GAAG,oBAAoB,EAAE,EAAE,QAAQ,EAAE;;AAE1E;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,2CAA2C,6DAAM;AACjD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,8CAA8C,0DAAG;AACjD,oBAAoB;AACpB;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,wDAAwD,iCAAiC,sDAAe,0BAA0B,sDAAe,kBAAkB,sDAAe,uBAAuB,sDAAe,aAAa;AACrO,sBAAsB,gEAAyB,EAAE,oDAAoD;AACrG;AACA;AACA,KAAK,6BAA6B,OAAO,oDAAM,mCAAmC,GAAG;AACrF,KAAK,gCAAgC,OAAO,oDAAM,2BAA2B,GAAG;AAChF,KAAK,4BAA4B;AACjC,KAAK;AACL;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,GAAG;AACnB,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,GAAG,4BAA4B,GAAG,kBAAkB,EAAE,EAAE,QAAQ,EAAE;;AAElF;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB,IAAI;AACvD;AACA,iCAAiC,eAAe;AAChD,8BAA8B,eAAe;AAC7C,8BAA8B,eAAe;AAC7C,gCAAgC,eAAe;AAC/C,uCAAuC,eAAe;AACtD,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA,wEAAwE,yCAAyC,sDAAe,iBAAiB;AACjJ,8BAA8B,gEAAyB,EAAE,oEAAoE;AAC7H;AACA;AACA,KAAK;AACL;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,sBAAsB,EAAE,EAAE,QAAQ,EAAE;;AAEnE;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC,wBAAwB,0DAAY;AACpC,0BAA0B,0DAAY;AACtC,yBAAyB,0DAAY;AACrC,yBAAyB,0DAAY;AACrC,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,8BAA8B;AAC9B;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,uCAAuC,+DAAwB,yBAAyB;AAC5J,2BAA2B,+DAAwB,EAAE,sHAAsH;AAC3K,QAAQ,yDAAkB;AAC1B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,WAAW,6GAA6G,YAAY,iGAAiG,aAAa,kEAA2B,kIAAkI;AACtZ,QAAQ,uDAAgB;AACxB,KAAK,EAAE,oBAAoB;AAC3B;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB,OAAO,uDAAS,+BAA+B;AACvE,sBAAsB,OAAO,mDAAK,EAAE;AACpC,eAAe,OAAO,mDAAK,EAAE;AAC7B,uBAAuB,OAAO,mDAAK,EAAE;AACrC,cAAc,OAAO,mDAAK,EAAE;AAC5B,YAAY,OAAO,oDAAM,EAAE;AAC3B,YAAY,OAAO,oDAAM,EAAE;AAC3B,cAAc,OAAO,oDAAM,EAAE;AAC7B,aAAa,OAAO,oDAAM,EAAE;AAC5B,aAAa,OAAO,oDAAM,EAAE;AAC5B,cAAc,OAAO,oDAAM,EAAE;AAC7B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,8BAA8B,EAAE,EAAE,GAAG;AACpE,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,uDAAS;AAC3B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,8EAA8E,4CAA4C,+DAAwB,yBAAyB;AAC3K,gCAAgC,+DAAwB,EAAE,kHAAkH,uDAAuD,YAAY,uBAAuB,aAAa,kEAA2B,GAAG;AACjT;AACA;AACA,KAAK;AACL;AACA;AACA,uBAAuB,OAAO,mDAAK,EAAE;AACrC,cAAc,OAAO,mDAAK,EAAE;AAC5B,gBAAgB,OAAO,oDAAM,EAAE;AAC/B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,8BAA8B,EAAE,EAAE,GAAG;AACpE,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC,wBAAwB,0DAAY;AACpC,0BAA0B,0DAAY;AACtC,yBAAyB,0DAAY;AACrC,yBAAyB,0DAAY;AACrC,0BAA0B,0DAAY;AACtC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,6CAA6C,+DAAwB,yBAAyB,+DAAwB,+BAA+B;AACrO,iCAAiC,+DAAwB,EAAE,yIAAyI;AACpM,QAAQ,yDAAkB;AAC1B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,WAAW,uDAAuD,YAAY,iGAAiG,aAAa,kEAA2B,wIAAwI;AACtW,QAAQ,uDAAgB;AACxB,KAAK,EAAE,oBAAoB;AAC3B;AACA;AACA,KAAK,8BAA8B;AACnC,KAAK,+CAA+C,OAAO,sDAAQ,EAAE;AACrE;AACA;AACA,wBAAwB,OAAO,uDAAS,+BAA+B;AACvE,sBAAsB,OAAO,mDAAK,EAAE;AACpC,eAAe,OAAO,mDAAK,EAAE;AAC7B,YAAY,OAAO,oDAAM,EAAE;AAC3B,YAAY,OAAO,oDAAM,EAAE;AAC3B,cAAc,OAAO,oDAAM,EAAE;AAC7B,aAAa,OAAO,oDAAM,EAAE;AAC5B,aAAa,OAAO,oDAAM,EAAE;AAC5B,cAAc,OAAO,oDAAM,EAAE;AAC7B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,8BAA8B,GAAG;AAChE,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,uDAAS;AAC3B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC,wBAAwB,0DAAY;AACpC,0BAA0B,0DAAY;AACtC,yBAAyB,0DAAY;AACrC,yBAAyB,0DAAY;AACrC,0BAA0B,0DAAY;AACtC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,6CAA6C,+DAAwB,yBAAyB,+DAAwB,+BAA+B;AACrO,iCAAiC,+DAAwB,EAAE,yIAAyI;AACpM,QAAQ,yDAAkB;AAC1B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,WAAW,uDAAuD,YAAY,iGAAiG,aAAa,kEAA2B,wIAAwI;AACtW,QAAQ,uDAAgB;AACxB,KAAK,EAAE,oBAAoB;AAC3B;AACA;AACA,KAAK,8BAA8B;AACnC,KAAK,+CAA+C,OAAO,sDAAQ,EAAE;AACrE;AACA;AACA,wBAAwB,OAAO,uDAAS,+BAA+B;AACvE,sBAAsB,OAAO,mDAAK,EAAE;AACpC,eAAe,OAAO,mDAAK,EAAE;AAC7B,YAAY,OAAO,oDAAM,EAAE;AAC3B,YAAY,OAAO,oDAAM,EAAE;AAC3B,cAAc,OAAO,oDAAM,EAAE;AAC7B,aAAa,OAAO,oDAAM,EAAE;AAC5B,aAAa,OAAO,oDAAM,EAAE;AAC5B,cAAc,OAAO,oDAAM,EAAE;AAC7B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,8BAA8B,GAAG;AAChE,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,uDAAS;AAC3B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC,wBAAwB,0DAAY;AACpC,0BAA0B,0DAAY;AACtC,yBAAyB,0DAAY;AACrC,yBAAyB,0DAAY;AACrC,0BAA0B,0DAAY;AACtC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,0CAA0C,+DAAwB,yBAAyB,+DAAwB,+BAA+B;AAC5N,8BAA8B,+DAAwB,EAAE,gIAAgI;AACxL,QAAQ,yDAAkB;AAC1B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,WAAW,uDAAuD,YAAY,iGAAiG,aAAa,kEAA2B,qIAAqI;AACnW,QAAQ,uDAAgB;AACxB,KAAK,EAAE,oBAAoB;AAC3B;AACA;AACA,KAAK,8BAA8B;AACnC,KAAK,+CAA+C,OAAO,sDAAQ,EAAE;AACrE;AACA;AACA,wBAAwB,OAAO,uDAAS,+BAA+B;AACvE,sBAAsB,OAAO,mDAAK,EAAE;AACpC,eAAe,OAAO,mDAAK,EAAE;AAC7B,YAAY,OAAO,oDAAM,EAAE;AAC3B,YAAY,OAAO,oDAAM,EAAE;AAC3B,cAAc,OAAO,oDAAM,EAAE;AAC7B,aAAa,OAAO,oDAAM,EAAE;AAC5B,aAAa,OAAO,oDAAM,EAAE;AAC5B,cAAc,OAAO,oDAAM,EAAE;AAC7B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,8BAA8B,GAAG;AAChE,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,uDAAS;AAC3B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC,wBAAwB,0DAAY;AACpC,0BAA0B,0DAAY;AACtC,yBAAyB,0DAAY;AACrC,yBAAyB,0DAAY;AACrC,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,6BAA6B,kCAAkC;AAC/D;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,0CAA0C,+DAAwB,yBAAyB;AACrK,8BAA8B,+DAAwB,EAAE,gIAAgI;AACxL,QAAQ,yDAAkB;AAC1B,KAAK;AACL;AACA,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A4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,8BAA8B,EAAE,EAAE,GAAG;AACpE,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,uDAAS;AAC3B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC,wBAAwB,0DAAY;AACpC,0BAA0B,0DAAY;AACtC,yBAAyB,0DAAY;AACrC,yBAAyB,0DAAY;AACrC,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,8BAA8B;AAC9B;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,uCAAuC,+DAAwB,yBAAyB;AAC5J,2BAA2B,+DAAwB,EAAE,sHAAsH;AAC3K,QAAQ,yDAAkB;AAC1B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,WAAW,6GAA6G,YAAY,iGAAiG,aAAa,kEAA2B,kIAAkI;AACtZ,QAAQ,uDAAgB;AACxB,KAAK,EAAE,oBAAoB;AAC3B;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB,OAAO,uDAAS,+BAA+B;AACvE,sBAAsB,OAAO,mDAAK,EAAE;AACpC,eAAe,OAAO,mDAAK,EAAE;AAC7B,uBAAuB,OAAO,mDAAK,EAAE;AACrC,cAAc,OAAO,mDAAK,EAAE;AAC5B,YAAY,OAAO,oDAAM,EAAE;AAC3B,YAAY,OAAO,oDAAM,EAAE;AAC3B,cAAc,OAAO,oDAAM,EAAE;AAC7B,aAAa,OAAO,oDAAM,EAAE;AAC5B,aAAa,OAAO,oDAAM,EAAE;AAC5B,cAAc,OAAO,oDAAM,EAAE;AAC7B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,8BAA8B,EAAE,EAAE,GAAG;AACpE,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,uDAAS;AAC3B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC,wBAAwB,0DAAY;AACpC,0BAA0B,0DAAY;AACtC,yBAAyB,0DAAY;AACrC,yBAAyB,0DAAY;AACrC,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,8BAA8B;AAC9B;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,gDAAgD,+DAAwB,yBAAyB;AACvL,oCAAoC,+DAAwB,EAAE,mJAAmJ;AACjN,QAAQ,yDAAkB;AAC1B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,WAAW,6GAA6G,YAAY,iGAAiG,aAAa,kEAA2B,2IAA2I;AAC/Z,QAAQ,uDAAgB;AACxB,KAAK,EAAE,oBAAoB;AAC3B;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB,OAAO,uDAAS,+BAA+B;AACvE,sBAAsB,OAAO,mDAAK,EAAE;AACpC,eAAe,OAAO,mDAAK,EAAE;AAC7B,uBAAuB,OAAO,mDAAK,EAAE;AACrC,cAAc,OAAO,mDAAK,EAAE;AAC5B,YAAY,OAAO,oDAAM,EAAE;AAC3B,YAAY,OAAO,oDAAM,EAAE;AAC3B,cAAc,OAAO,oDAAM,EAAE;AAC7B,aAAa,OAAO,oDAAM,EAAE;AAC5B,aAAa,OAAO,oDAAM,EAAE;AAC5B,cAAc,OAAO,oDAAM,EAAE;AAC7B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,8BAA8B,EAAE,EAAE,GAAG;AACpE,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,uDAAS;AAC3B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC,0BAA0B,0DAAY;AACtC,wBAAwB,0DAAY;AACpC,yBAAyB,0DAAY;AACrC,yBAAyB,0DAAY;AACrC,yBAAyB,0DAAY;AACrC,iCAAiC,0DAAY;AAC7C,0BAA0B,0DAAY;AACtC,0BAA0B,0DAAY;AACtC,yCAAyC,0DAAY;AACrD,wCAAwC,0DAAY;AACpD,gCAAgC,0DAAY;AAC5C;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,+FAA+F,sCAAsC;AACrI;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC,wCAAwC;AACxC;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,iDAAI;AACnB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oGAAoG,uDAAuD,+DAAwB,yBAAyB;AAC5M,2CAA2C,+DAAwB,EAAE,wKAAwK;AAC7O,QAAQ,yDAAkB;AAC1B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,WAAW,+IAA+I,YAAY,+RAA+R,aAAa,kEAA2B,kJAAkJ;AACtoB,QAAQ,uDAAgB;AACxB,KAAK,EAAE,oBAAoB;AAC3B;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB,OAAO,uDAAS,+BAA+B;AACvE,sBAAsB,OAAO,mDAAK,EAAE;AACpC,sBAA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","file":"components-pagoTargeta-select-targeta-select-targeta-module.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class stripeService {\n\n  constructor(private http: HttpClient) { }\n\ncharge(cantidad, tokenId, ){\n\n  const api = \"http://localhost:3000/stripe_checkout\";\n  return this.http.post(api, {\n\n    stripeToken: tokenId,\n    cantidad: cantidad,\n    \n\n  }).toPromise();\n\n}\n\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GuardAGuard } from '@app/guards/guard-a.guard';\nimport { GuardGuard } from '@app/guards/guard.guard';\n\nimport { SelectTargetaComponent } from './select-targeta.component';\n\nconst routes: Routes = [{ path: '', component: SelectTargetaComponent,\ncanActivateChild:[GuardAGuard] }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SelectTargetaRoutingModule { }\n","import {FormGroup, FormBuilder, Validators} from '@angular/forms';\nimport { AfterViewInit, Component, ElementRef, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { StripeService, StripeCardComponent } from 'ngx-stripe';\nimport {stripeService} from '../../../servicioPago/stripe.service';\nimport {\n  StripeCardElementOptions,\n  StripeElementsOptions,\n} from '@stripe/stripe-js';\nimport { ValorService } from '@app/shared/services/valor.service';\nimport { AuthCrudService } from '@app/shared/services/authCrud.service';\nimport { AuthService } from '@app/components/auth/auth.service';\nimport { Pago } from '@app/shared/models/pago';\nimport { CdkNoDataRow } from '@angular/cdk/table';\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\nimport { MessageService } from '@app/shared/services/message.service';\nimport { ProductoService } from '@app/shared/services/producto.service';\nimport { User } from '@app/shared/models/user.interface';\nimport {Pedido} from '../../../shared/models/pedido';\nimport { ProductService } from '@app/components/posts/product.service';\nimport { Product } from '@app/shared/models/product.interface';\nimport { Observable } from 'rxjs';\nimport { ServiceTService } from '@app/serviceT/service-t.service';\n@Component({\n  selector: 'app-select-targeta',\n  templateUrl: './select-targeta.component.html',\n  styleUrls: ['./select-targeta.component.scss']\n})\nexport class SelectTargetaComponent implements OnInit {\n  @ViewChild(StripeCardComponent) card: StripeCardComponent;\nuid = '';\n  stripeTest: FormGroup;\n\n  pedidoT: Pedido;\n\n  pago:Pago;\n\n  cliente: User;\n\n  pedido: Pedido;\n\n  products$: Observable<Product[]>;\n\n  cardOptions: StripeCardElementOptions = {\n    style: {\n      base: {\n        iconColor: '#666EE8',\n        color: '#31325F',\n        fontWeight: '300',\n        fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n        fontSize: '18px',\n        '::placeholder': {\n          color: '#CFD7E0'\n        }\n      }\n    }\n  };\n \n  elementsOptions: StripeElementsOptions = {\n    locale: 'es'\n  };\n \n\n \n\n  constructor(private fb: FormBuilder, private stripeService: StripeService,\n    private stripSvc: stripeService,private cantidaSvc: ValorService,\n    private authAf: AuthService, private firestore: AuthCrudService,\n    private postSvc: ProductService,\n    private router: Router,private message: MessageService,private productoSvc: ProductoService,\n    private serviceTService: ServiceTService) {\n\n     this.products$ = postSvc.getAllPosts();\n     \n      this.pedidoT = serviceTService.getPedidoT();\n\n      console.log(this.pedidoT);\n            \n      \n      this.authAf.afAuth.user.subscribe(res => {\n\n        this.uid = res.uid;\n\n      });\n\n      this.initCarrito();\n     }\n\n\n  ngOnInit(): void{\n\n    this.stripeTest = this.fb.group({\n      name: ['', [Validators.required]]\n\n  });\n\n}\n\ncreateToken(): void {\n  const name = this.stripeTest.get('name').value\n\n  if(name == \"\"){\n    Swal.fire(\"¡por favor! digite su nombre que esta en la targeta de pago\");\n    return;\n  }\n  this.stripeService\n    .createToken(this.card.element, { name })\n    .subscribe((result) => {\n      if (result.token) {\n       \n        const valor = this.cantidaSvc.getValorTotal();\n\n        console.log(valor);\n\n        const path = 'clientes';\n        this.firestore.getDoc<User>(path,this.uid).subscribe(res => {\n\n          this.cliente = res;\n        });\n\n\n \n\n\n       this.stripSvc.charge(valor, result.token.id).then(() => {\n\n\n    const pathT = `clientes/${this.uid}/pedidos`;\n\n    this.firestore.create<Pedido>(this.pedidoT,pathT,this.pedidoT.id).then(() => {\n\n     console.log('pedido guardado');\n    });\n        const path = 'pagos';\n\n        var fecha = new Date()\n        const fechaT = ((fecha.getDate())+'/'+(1+fecha.getMonth()))+'/'+fecha.getFullYear();\n        \n\n       this.pago = {\n\n        idtokenTargeta: result.token.id,\n        cantidad: valor,\n        idCliente: this.uid,\n        fecha: fechaT\n\n       }\n       \n          \n      this.pedido = this.productoSvc.getProducto();\n\n      this.pedido.CorreoClient = this.cliente.gmail;\n\n  \n      \n       this.message.sendMessage(this.pedido).subscribe(() => {\n\n        console.log('message enviado correctamente');\n\n\n       });\n       \n\n       \n       \n        this.firestore.doc<Pago>(this.pago,path).then(res => {\n\n          console.log(res);\n\n          this.router.navigate(['/home']);\n        });\n\n\n        \n\n       });\n       \n\n        console.log('Token', result.token.id);\n\n        \n      } else if (result.error) {\n        Swal.fire(result.error.message);\n        \n    \n      }\n    });\n\n}\n\ninitCarrito(){\n\n  this.pedido = {\n    id: '',\n    cliente: null,\n    productos:[],\n    precioTotal: null,\n    estado: 'enviado',\n    fecha: new Date(),\n    valoracion: null,\n}\n}\n\n}","\n<div *ngIf=\"products$  | async as products; else loading\">\n<div class=\"container\">\n  <br>\n\n  <mat-card>\n\n    <p style=\"text-align: center;\"><strong> Paypal </strong></p>\n\n <app-paypal></app-paypal>\n\n</mat-card>\n\n</div>\n\n<div class=\"container \" >\n  \n  <br>\n  <br>\n\n  \n\n \n  &nbsp;\n  &nbsp;\n \n <mat-card>\n\n  <p style=\"text-align: center;\"><strong> Stripe </strong></p>\n  <form novalidate [formGroup]=\"stripeTest\"  (ngSubmit)=\"createToken()\" >\n\n   \n    <input type=\"text\" formControlName=\"name\" placeholder=\"Full Name\" required />\n    &nbsp;   &nbsp;   &nbsp;   &nbsp;   &nbsp;   &nbsp;  &nbsp;   &nbsp;\n    &nbsp;   &nbsp;   &nbsp;   &nbsp;   &nbsp;   &nbsp;   &nbsp;   &nbsp;\n \n    <ngx-stripe-card\n      [options]=\"cardOptions\"\n      [elementsOptions]=\"elementsOptions\"\n    ></ngx-stripe-card>\n    <button type=\"submit\" mat-raised-button  color=\"primary\">\n      Pagar\n    </button>\n  </form>\n\n</mat-card>\n\n</div>\n\n\n</div>\n\n\n<ng-template #loading>\n  <div class=\"container-spinner\">\n  \n    <mat-progress-bar ></mat-progress-bar>\n\n  </div>\n      \n  \n  </ng-template>\n\n","import { filter, first, map, switchMap } from 'rxjs/operators';\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { __awaiter } from 'tslib';\nimport { BehaviorSubject, from } from 'rxjs';\nimport { InjectionToken, Injectable, Inject, PLATFORM_ID, Component, Input, ViewChild, EventEmitter, Output, Directive, Optional, NgModule } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/services/stripe-instance.class.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"stripeElementRef\"];\nclass StripeInstance {\n    /**\n     * @param {?} loader\n     * @param {?} window\n     * @param {?} key\n     * @param {?=} options\n     */\n    constructor(loader, window, key, options) {\n        this.loader = loader;\n        this.window = window;\n        this.key = key;\n        this.options = options;\n        this.stripe$ = new BehaviorSubject(undefined);\n        this.stripe = this.stripe$\n            .asObservable()\n            .pipe(filter((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => Boolean(stripe))));\n        this.loader\n            .asStream()\n            .pipe(filter((/**\n         * @param {?} status\n         * @return {?}\n         */\n        (status) => status.loaded === true)), first(), map((/**\n         * @return {?}\n         */\n        () => ((/** @type {?} */ (this.window.getNativeWindow()))).Stripe)))\n            .subscribe((/**\n         * @param {?} stripeInstance\n         * @return {?}\n         */\n        (stripeInstance) => {\n            /** @type {?} */\n            const stripe = this.options\n                ? ((/** @type {?} */ (stripeInstance(this.key, this.options))))\n                : ((/** @type {?} */ (stripeInstance(this.key))));\n            this.stripe$.next(stripe);\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    getInstance() {\n        return this.stripe$.getValue();\n    }\n    /**\n     * @param {?=} options\n     * @return {?}\n     */\n    elements(options) {\n        return this.stripe$.asObservable().pipe(filter((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => Boolean(stripe))), map((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => stripe.elements(options))), first());\n    }\n    /**\n     * @param {?=} options\n     * @return {?}\n     */\n    redirectToCheckout(options) {\n        return this.stripe.pipe(switchMap((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => from(stripe.redirectToCheckout(options)))), first());\n    }\n    /**\n     * @param {?} clientSecret\n     * @param {?=} data\n     * @return {?}\n     */\n    confirmAuBecsDebitPayment(clientSecret, data) {\n        return this.stripe.pipe(switchMap((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => from(stripe.confirmAuBecsDebitPayment(clientSecret, data)))), first());\n    }\n    /**\n     * @param {?} clientSecret\n     * @param {?=} data\n     * @param {?=} options\n     * @return {?}\n     */\n    confirmBancontactPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => from(stripe.confirmBancontactPayment(clientSecret, data, options)))), first());\n    }\n    /**\n     * @param {?} clientSecret\n     * @param {?=} data\n     * @param {?=} options\n     * @return {?}\n     */\n    confirmCardPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => from(stripe.confirmCardPayment(clientSecret, data, options)))), first());\n    }\n    /**\n     * @param {?} clientSecret\n     * @param {?=} data\n     * @param {?=} options\n     * @return {?}\n     */\n    confirmEpsPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => from(stripe.confirmEpsPayment(clientSecret, data, options)))), first());\n    }\n    /**\n     * @param {?} clientSecret\n     * @param {?=} data\n     * @param {?=} options\n     * @return {?}\n     */\n    confirmFpxPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => from(stripe.confirmFpxPayment(clientSecret, data, options)))), first());\n    }\n    /**\n     * @param {?} clientSecret\n     * @param {?=} data\n     * @param {?=} options\n     * @return {?}\n     */\n    confirmGiropayPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => from(stripe.confirmGiropayPayment(clientSecret, data, options)))), first());\n    }\n    /**\n     * @param {?} clientSecret\n     * @param {?=} data\n     * @param {?=} options\n     * @return {?}\n     */\n    confirmIdealPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => from(stripe.confirmIdealPayment(clientSecret, data, options)))), first());\n    }\n    /**\n     * @param {?} clientSecret\n     * @param {?=} data\n     * @param {?=} options\n     * @return {?}\n     */\n    confirmP24Payment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => from(stripe.confirmP24Payment(clientSecret, data, options)))), first());\n    }\n    /**\n     * @param {?} clientSecret\n     * @param {?=} data\n     * @return {?}\n     */\n    confirmSepaDebitPayment(clientSecret, data) {\n        return this.stripe.pipe(switchMap((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => from(stripe.confirmSepaDebitPayment(clientSecret, data)))), first());\n    }\n    /**\n     * @param {?} clientSecret\n     * @return {?}\n     */\n    handleCardAction(clientSecret) {\n        return this.stripe.pipe(switchMap((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => from(stripe.handleCardAction(clientSecret)))), first());\n    }\n    /**\n     * @param {?} paymentMethodData\n     * @return {?}\n     */\n    createPaymentMethod(paymentMethodData) {\n        return this.stripe.pipe(switchMap((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => from(stripe.createPaymentMethod(paymentMethodData)))), first());\n    }\n    /**\n     * @param {?} clientSecret\n     * @return {?}\n     */\n    retrievePaymentIntent(clientSecret) {\n        return this.stripe.pipe(switchMap((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => from(stripe.retrievePaymentIntent(clientSecret)))), first());\n    }\n    /**\n     * @param {?} clientSecret\n     * @param {?=} data\n     * @return {?}\n     */\n    confirmAuBecsDebitSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => from(stripe.confirmAuBecsDebitSetup(clientSecret, data)))), first());\n    }\n    /**\n     * @param {?} clientSecret\n     * @param {?=} data\n     * @param {?=} options\n     * @return {?}\n     */\n    confirmCardSetup(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => from(stripe.confirmCardSetup(clientSecret, data, options)))), first());\n    }\n    /**\n     * @param {?} clientSecret\n     * @param {?=} data\n     * @return {?}\n     */\n    confirmSepaDebitSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => from(stripe.confirmSepaDebitSetup(clientSecret, data)))), first());\n    }\n    /**\n     * @param {?} clientSecret\n     * @return {?}\n     */\n    retrieveSetupIntent(clientSecret) {\n        return this.stripe.pipe(switchMap((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => from(stripe.confirmSepaDebitSetup(clientSecret)))), first());\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    paymentRequest(options) {\n        /** @type {?} */\n        const stripe = this.getInstance();\n        return stripe ? stripe.paymentRequest(options) : undefined;\n    }\n    /**\n     * @param {?} tokenType\n     * @param {?} data\n     * @return {?}\n     */\n    createToken(tokenType, data) {\n        return this.stripe.pipe(switchMap((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => from(stripe.createToken(tokenType, data)))), first());\n    }\n    /**\n     * @param {?} a\n     * @param {?=} b\n     * @return {?}\n     */\n    createSource(a, b) {\n        return this.stripe.pipe(switchMap((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => from(stripe.createSource(a, b)))), first());\n    }\n    /**\n     * @param {?} source\n     * @return {?}\n     */\n    retrieveSource(source) {\n        return this.stripe.pipe(switchMap((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => from(stripe.retrieveSource(source)))), first());\n    }\n    /**\n     * @deprecated\n     * @param {?} clientSecret\n     * @param {?=} element\n     * @param {?=} data\n     * @return {?}\n     */\n    handleCardPayment(clientSecret, element, data) {\n        return this.stripe.pipe(switchMap((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => from(((/** @type {?} */ (stripe))).handleCardPayment(clientSecret, element, data)))), first());\n    }\n    /**\n     * @deprecated\n     * @param {?} clientSecret\n     * @param {?=} element\n     * @param {?=} data\n     * @return {?}\n     */\n    confirmPaymentIntent(clientSecret, element, data) {\n        return this.stripe.pipe(switchMap((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => from(((/** @type {?} */ (stripe))).confirmPaymentIntent(clientSecret, element, data)))), first());\n    }\n    /**\n     * @deprecated\n     * @param {?} clientSecret\n     * @param {?=} element\n     * @param {?=} data\n     * @return {?}\n     */\n    handleCardSetup(clientSecret, element, data) {\n        return this.stripe.pipe(switchMap((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => from(((/** @type {?} */ (stripe))).handleCardSetup(clientSecret, element, data)))), first());\n    }\n    /**\n     * @deprecated\n     * @param {?} clientSecret\n     * @param {?=} element\n     * @param {?=} data\n     * @return {?}\n     */\n    confirmSetupIntent(clientSecret, element, data) {\n        return this.stripe.pipe(switchMap((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => from(((/** @type {?} */ (stripe))).confirmSetupIntent(clientSecret, element, data)))), first());\n    }\n    /**\n     * @deprecated\n     * @param {?} clientSecret\n     * @param {?=} element\n     * @param {?=} data\n     * @return {?}\n     */\n    handleFpxPayment(clientSecret, element, data) {\n        return this.stripe.pipe(switchMap((/**\n         * @param {?} stripe\n         * @return {?}\n         */\n        (stripe) => from(((/** @type {?} */ (stripe))).handleFpxPayment(clientSecret, element, data)))), first());\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/interfaces/ngx-stripe.interface.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst STRIPE_PUBLISHABLE_KEY = new InjectionToken('Stripe Publishable Key');\n/** @type {?} */\nconst STRIPE_OPTIONS = new InjectionToken('Stripe Options');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/services/window-ref.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass WindowRef {\n    /**\n     * @param {?} platformId\n     */\n    constructor(platformId) {\n        this.platformId = platformId;\n    }\n    /**\n     * @return {?}\n     */\n    getNativeWindow() {\n        if (isPlatformBrowser(this.platformId)) {\n            return window;\n        }\n        return (/** @type {?} */ ({}));\n    }\n}\nWindowRef.ɵfac = function WindowRef_Factory(t) { return new (t || WindowRef)(ɵngcc0.ɵɵinject(PLATFORM_ID)); };\nWindowRef.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: WindowRef, factory: WindowRef.ɵfac });\n/** @nocollapse */\nWindowRef.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(WindowRef, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/services/document-ref.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DocumentRef {\n    /**\n     * @param {?} platformId\n     */\n    constructor(platformId) {\n        this.platformId = platformId;\n    }\n    /**\n     * @return {?}\n     */\n    getNativeDocument() {\n        if (isPlatformBrowser(this.platformId)) {\n            return document;\n        }\n        return (/** @type {?} */ ({}));\n    }\n}\nDocumentRef.ɵfac = function DocumentRef_Factory(t) { return new (t || DocumentRef)(ɵngcc0.ɵɵinject(PLATFORM_ID)); };\nDocumentRef.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: DocumentRef, factory: DocumentRef.ɵfac });\n/** @nocollapse */\nDocumentRef.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DocumentRef, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/services/api-loader.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass LazyStripeAPILoader {\n    /**\n     * @param {?} platformId\n     * @param {?} window\n     * @param {?} document\n     */\n    constructor(platformId, window, document) {\n        this.platformId = platformId;\n        this.window = window;\n        this.document = document;\n        this.status = new BehaviorSubject({\n            error: false,\n            loaded: false,\n            loading: false\n        });\n    }\n    /**\n     * @return {?}\n     */\n    asStream() {\n        this.load();\n        return this.status.asObservable();\n    }\n    /**\n     * @return {?}\n     */\n    isReady() {\n        return this.status.getValue().loaded;\n    }\n    /**\n     * @return {?}\n     */\n    load() {\n        if (isPlatformServer(this.platformId)) {\n            return;\n        }\n        /** @type {?} */\n        const status = this.status.getValue();\n        if (this.window.getNativeWindow().hasOwnProperty('Stripe')) {\n            this.status.next({\n                error: false,\n                loaded: true,\n                loading: false\n            });\n        }\n        else if (!status.loaded && !status.loading) {\n            this.status.next(Object.assign({}, status, { loading: true }));\n            /** @type {?} */\n            const script = this.document.getNativeDocument().createElement('script');\n            script.type = 'text/javascript';\n            script.async = true;\n            script.defer = true;\n            script.src = 'https://js.stripe.com/v3/';\n            script.onload = (/**\n             * @return {?}\n             */\n            () => {\n                this.status.next({\n                    error: false,\n                    loaded: true,\n                    loading: false\n                });\n            });\n            script.onerror = (/**\n             * @return {?}\n             */\n            () => {\n                this.status.next({\n                    error: true,\n                    loaded: false,\n                    loading: false\n                });\n            });\n            this.document.getNativeDocument().body.appendChild(script);\n        }\n    }\n}\nLazyStripeAPILoader.ɵfac = function LazyStripeAPILoader_Factory(t) { return new (t || LazyStripeAPILoader)(ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(WindowRef), ɵngcc0.ɵɵinject(DocumentRef)); };\nLazyStripeAPILoader.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: LazyStripeAPILoader, factory: LazyStripeAPILoader.ɵfac });\n/** @nocollapse */\nLazyStripeAPILoader.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: WindowRef },\n    { type: DocumentRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LazyStripeAPILoader, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: WindowRef }, { type: DocumentRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/services/stripe.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass StripeService {\n    /**\n     * @param {?} key\n     * @param {?} options\n     * @param {?} loader\n     * @param {?} window\n     */\n    constructor(key, options, loader, window) {\n        this.key = key;\n        this.options = options;\n        this.loader = loader;\n        this.window = window;\n        if (key) {\n            this.stripe = new StripeInstance(this.loader, this.window, key, options);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getStripeReference() {\n        return this.loader.asStream().pipe(filter((/**\n         * @param {?} status\n         * @return {?}\n         */\n        (status) => status.loaded === true)), map((/**\n         * @return {?}\n         */\n        () => ((/** @type {?} */ (this.window.getNativeWindow()))).Stripe)));\n    }\n    /**\n     * @return {?}\n     */\n    getInstance() {\n        return this.stripe.getInstance();\n    }\n    /**\n     * @param {?} key\n     * @param {?=} options\n     * @return {?}\n     */\n    setKey(key, options) {\n        return this.changeKey(key, options);\n    }\n    /**\n     * @param {?} key\n     * @param {?=} options\n     * @return {?}\n     */\n    changeKey(key, options) {\n        this.stripe = new StripeInstance(this.loader, this.window, key, options);\n        return this.stripe;\n    }\n    /**\n     * @param {?=} options\n     * @return {?}\n     */\n    elements(options) {\n        return this.stripe.elements(options);\n    }\n    /**\n     * @param {?=} options\n     * @return {?}\n     */\n    redirectToCheckout(options) {\n        return this.stripe.redirectToCheckout(options);\n    }\n    /**\n     * @param {?} clientSecret\n     * @param {?=} data\n     * @return {?}\n     */\n    confirmAuBecsDebitPayment(clientSecret, data) {\n        return this.stripe.confirmAuBecsDebitPayment(clientSecret, data);\n    }\n    /**\n     * @param {?} clientSecret\n     * @param {?=} data\n     * @param {?=} options\n     * @return {?}\n     */\n    confirmBancontactPayment(clientSecret, data, options) {\n        return this.stripe.confirmBancontactPayment(clientSecret, data, options);\n    }\n    /**\n     * @param {?} clientSecret\n     * @param {?=} data\n     * @param {?=} options\n     * @return {?}\n     */\n    confirmCardPayment(clientSecret, data, options) {\n        return this.stripe.confirmCardPayment(clientSecret, data, options);\n    }\n    /**\n     * @param {?} clientSecret\n     * @param {?=} data\n     * @param {?=} options\n     * @return {?}\n     */\n    confirmEpsPayment(clientSecret, data, options) {\n        return this.stripe.confirmEpsPayment(clientSecret, data, options);\n    }\n    /**\n     * @param {?} clientSecret\n     * @param {?=} data\n     * @param {?=} options\n     * @return {?}\n     */\n    confirmFpxPayment(clientSecret, data, options) {\n        return this.stripe.confirmFpxPayment(clientSecret, data, options);\n    }\n    /**\n     * @param {?} clientSecret\n     * @param {?=} data\n     * @param {?=} options\n     * @return {?}\n     */\n    confirmGiropayPayment(clientSecret, data, options) {\n        return this.stripe.confirmGiropayPayment(clientSecret, data, options);\n    }\n    /**\n     * @param {?} clientSecret\n     * @param {?=} data\n     * @param {?=} options\n     * @return {?}\n     */\n    confirmIdealPayment(clientSecret, data, options) {\n        return this.stripe.confirmIdealPayment(clientSecret, data, options);\n    }\n    /**\n     * @param {?} clientSecret\n     * @param {?=} data\n     * @param {?=} options\n     * @return {?}\n     */\n    confirmP24Payment(clientSecret, data, options) {\n        return this.stripe.confirmP24Payment(clientSecret, data, options);\n    }\n    /**\n     * @param {?} clientSecret\n     * @param {?=} data\n     * @return {?}\n     */\n    confirmSepaDebitPayment(clientSecret, data) {\n        return this.stripe.confirmSepaDebitPayment(clientSecret, data);\n    }\n    /**\n     * @param {?} clientSecret\n     * @return {?}\n     */\n    handleCardAction(clientSecret) {\n        return this.stripe.handleCardAction(clientSecret);\n    }\n    /**\n     * @param {?} paymentMethodData\n     * @return {?}\n     */\n    createPaymentMethod(paymentMethodData) {\n        return this.stripe.createPaymentMethod(paymentMethodData);\n    }\n    /**\n     * @param {?} clientSecret\n     * @return {?}\n     */\n    retrievePaymentIntent(clientSecret) {\n        return this.stripe.retrievePaymentIntent(clientSecret);\n    }\n    /**\n     * @param {?} clientSecret\n     * @param {?=} data\n     * @return {?}\n     */\n    confirmAuBecsDebitSetup(clientSecret, data) {\n        return this.stripe.confirmAuBecsDebitSetup(clientSecret, data);\n    }\n    /**\n     * @param {?} clientSecret\n     * @param {?=} data\n     * @param {?=} options\n     * @return {?}\n     */\n    confirmCardSetup(clientSecret, data, options) {\n        return this.stripe.confirmCardSetup(clientSecret, data, options);\n    }\n    /**\n     * @param {?} clientSecret\n     * @param {?=} data\n     * @return {?}\n     */\n    confirmSepaDebitSetup(clientSecret, data) {\n        return this.stripe.confirmSepaDebitSetup(clientSecret, data);\n    }\n    /**\n     * @param {?} clientSecret\n     * @return {?}\n     */\n    retrieveSetupIntent(clientSecret) {\n        return this.stripe.retrieveSetupIntent(clientSecret);\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    paymentRequest(options) {\n        return this.stripe.paymentRequest(options);\n    }\n    /**\n     * @param {?} tokenType\n     * @param {?} data\n     * @return {?}\n     */\n    createToken(tokenType, data) {\n        return this.stripe.createToken(tokenType, data);\n    }\n    /**\n     * @param {?} a\n     * @param {?=} b\n     * @return {?}\n     */\n    createSource(a, b) {\n        return this.stripe.createSource(a, b);\n    }\n    /**\n     * @param {?} source\n     * @return {?}\n     */\n    retrieveSource(source) {\n        return this.stripe.retrieveSource(source);\n    }\n    /**\n     * @deprecated\n     * @param {?} clientSecret\n     * @param {?=} element\n     * @param {?=} data\n     * @return {?}\n     */\n    handleCardPayment(clientSecret, element, data) {\n        return this.stripe.handleCardPayment(clientSecret, element, data);\n    }\n    /**\n     * @deprecated\n     * @param {?} clientSecret\n     * @param {?=} element\n     * @param {?=} data\n     * @return {?}\n     */\n    confirmPaymentIntent(clientSecret, element, data) {\n        return this.stripe.confirmPaymentIntent(clientSecret, element, data);\n    }\n    /**\n     * @deprecated\n     * @param {?} clientSecret\n     * @param {?=} element\n     * @param {?=} data\n     * @return {?}\n     */\n    handleCardSetup(clientSecret, element, data) {\n        return this.stripe.handleCardSetup(clientSecret, element, data);\n    }\n    /**\n     * @deprecated\n     * @param {?} clientSecret\n     * @param {?=} element\n     * @param {?=} data\n     * @return {?}\n     */\n    confirmSetupIntent(clientSecret, element, data) {\n        return this.stripe.confirmSetupIntent(clientSecret, element, data);\n    }\n    /**\n     * @deprecated\n     * @param {?} clientSecret\n     * @param {?=} element\n     * @param {?=} data\n     * @return {?}\n     */\n    handleFpxPayment(clientSecret, element, data) {\n        return this.stripe.handleFpxPayment(clientSecret, element, data);\n    }\n}\nStripeService.ɵfac = function StripeService_Factory(t) { return new (t || StripeService)(ɵngcc0.ɵɵinject(STRIPE_PUBLISHABLE_KEY), ɵngcc0.ɵɵinject(STRIPE_OPTIONS), ɵngcc0.ɵɵinject(LazyStripeAPILoader), ɵngcc0.ɵɵinject(WindowRef)); };\nStripeService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: StripeService, factory: StripeService.ɵfac });\n/** @nocollapse */\nStripeService.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [STRIPE_PUBLISHABLE_KEY,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [STRIPE_OPTIONS,] }] },\n    { type: LazyStripeAPILoader },\n    { type: WindowRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StripeService, [{\n        type: Injectable\n    }], function () { return [{ type: String, decorators: [{\n                type: Inject,\n                args: [STRIPE_PUBLISHABLE_KEY]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [STRIPE_OPTIONS]\n            }] }, { type: LazyStripeAPILoader }, { type: WindowRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/services/stripe-elements.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass StripeElementsService {\n    /**\n     * @param {?} stripeService\n     */\n    constructor(stripeService) {\n        this.stripeService = stripeService;\n    }\n    /**\n     * @param {?} stripe\n     * @param {?=} options\n     * @return {?}\n     */\n    elements(stripe, options = {}) {\n        if (stripe) {\n            if (Object.keys(options).length > 0) {\n                return stripe.elements(options);\n            }\n            return stripe.elements();\n        }\n        else {\n            if (Object.keys(options).length > 0) {\n                return this.stripeService.elements(options);\n            }\n            return this.stripeService.elements();\n        }\n    }\n    /**\n     * @param {?} stripe\n     * @param {?} options\n     * @return {?}\n     */\n    paymentRequest(stripe, options) {\n        return stripe\n            ? stripe.paymentRequest(options)\n            : this.stripeService.paymentRequest(options);\n    }\n    /**\n     * @param {?} options\n     * @param {?} containerClass\n     * @return {?}\n     */\n    mergeOptions(options, containerClass) {\n        if (!containerClass || (options && options.classes)) {\n            return options || {};\n        }\n        if (!options || !options.classes) {\n            return Object.assign({}, (options || {}), { classes: {\n                    base: containerClass,\n                    complete: `${containerClass}--complete`,\n                    empty: `${containerClass}--empty`,\n                    focus: `${containerClass}--focus`,\n                    invalid: `${containerClass}--invalid`,\n                    webkitAutoFill: `${containerClass}--webkit-autoFill`\n                } });\n        }\n        return options || {};\n    }\n}\nStripeElementsService.ɵfac = function StripeElementsService_Factory(t) { return new (t || StripeElementsService)(ɵngcc0.ɵɵinject(StripeService)); };\nStripeElementsService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: StripeElementsService, factory: StripeElementsService.ɵfac });\n/** @nocollapse */\nStripeElementsService.ctorParameters = () => [\n    { type: StripeService }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StripeElementsService, [{\n        type: Injectable\n    }], function () { return [{ type: StripeService }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/card.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass StripeCardComponent {\n    /**\n     * @param {?} stripeElementsService\n     */\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = 'starting';\n            /** @type {?} */\n            const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n            /** @type {?} */\n            let updateElements = false;\n            if (changes.elementsOptions || changes.stripe || !this.elements) {\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe, this.elementsOptions)\n                    .toPromise();\n                updateElements = true;\n            }\n            if (changes.options ||\n                changes.containerClass ||\n                !this.element ||\n                updateElements) {\n                if (this.element && !updateElements) {\n                    this.update(options);\n                }\n                else if (this.elements && updateElements) {\n                    this.createElement(options);\n                }\n            }\n            this.state = 'ready';\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state === 'notready') {\n                this.state = 'starting';\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe)\n                    .toPromise();\n                this.createElement();\n                this.state = 'ready';\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    getCard() {\n        return this.element;\n    }\n    /**\n     * @private\n     * @param {?=} options\n     * @return {?}\n     */\n    createElement(options = {}) {\n        this.element = this.elements.create('card', options);\n        this.element.on('change', (/**\n         * @param {?} ev\n         * @return {?}\n         */\n        (ev) => this.change.emit(ev)));\n        this.element.on('blur', (/**\n         * @return {?}\n         */\n        () => this.blur.emit()));\n        this.element.on('focus', (/**\n         * @return {?}\n         */\n        () => this.focus.emit()));\n        this.element.on('ready', (/**\n         * @return {?}\n         */\n        () => this.ready.emit()));\n        this.element.on('escape', (/**\n         * @return {?}\n         */\n        () => this.escape.emit()));\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripeCardComponent.ɵfac = function StripeCardComponent_Factory(t) { return new (t || StripeCardComponent)(ɵngcc0.ɵɵdirectiveInject(StripeElementsService)); };\nStripeCardComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: StripeCardComponent, selectors: [[\"ngx-stripe-card\"]], viewQuery: function StripeCardComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    } }, inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[1, \"field\"], [\"stripeElementRef\", \"\"]], template: function StripeCardComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0, 1);\n    } }, encapsulation: 2 });\n/** @nocollapse */\nStripeCardComponent.ctorParameters = () => [\n    { type: StripeElementsService }\n];\nStripeCardComponent.propDecorators = {\n    stripeElementRef: [{ type: ViewChild, args: ['stripeElementRef',] }],\n    containerClass: [{ type: Input }],\n    options: [{ type: Input }],\n    elementsOptions: [{ type: Input }],\n    stripe: [{ type: Input }],\n    load: [{ type: Output }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    focus: [{ type: Output }],\n    ready: [{ type: Output }],\n    escape: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StripeCardComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-stripe-card',\n                template: `<div class=\"field\" #stripeElementRef></div>`\n            }]\n    }], function () { return [{ type: StripeElementsService }]; }, { load: [{\n            type: Output\n        }], blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], ready: [{\n            type: Output\n        }], escape: [{\n            type: Output\n        }], stripeElementRef: [{\n            type: ViewChild,\n            args: ['stripeElementRef']\n        }], containerClass: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }], elementsOptions: [{\n            type: Input\n        }], stripe: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/directives/card-group.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass StripeCardGroupDirective {\n    /**\n     * @param {?} stripeElementsService\n     */\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.elements = new EventEmitter();\n        this.state = 'notready';\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = 'starting';\n            /** @type {?} */\n            const elementsOptions = this.elementsOptions;\n            /** @type {?} */\n            const stripe = this.stripe;\n            if (changes.elementsOptions || changes.stripe || !this._elements) {\n                this._elements = yield this.stripeElementsService\n                    .elements(stripe, elementsOptions)\n                    .toPromise();\n                this.elements.emit(this._elements);\n            }\n            this.state = 'ready';\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state === 'notready') {\n                this.state = 'starting';\n                this._elements = yield this.stripeElementsService\n                    .elements(this.stripe)\n                    .toPromise();\n                this.elements.emit(this._elements);\n                this.state = 'ready';\n            }\n        });\n    }\n}\nStripeCardGroupDirective.ɵfac = function StripeCardGroupDirective_Factory(t) { return new (t || StripeCardGroupDirective)(ɵngcc0.ɵɵdirectiveInject(StripeElementsService)); };\nStripeCardGroupDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: StripeCardGroupDirective, selectors: [[\"ngx-stripe-card-group\"], [\"\", \"ngxStripeCardGroup\", \"\"]], inputs: { elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { elements: \"elements\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nStripeCardGroupDirective.ctorParameters = () => [\n    { type: StripeElementsService }\n];\nStripeCardGroupDirective.propDecorators = {\n    elementsOptions: [{ type: Input }],\n    stripe: [{ type: Input }],\n    elements: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StripeCardGroupDirective, [{\n        type: Directive,\n        args: [{\n                selector: 'ngx-stripe-card-group,[ngxStripeCardGroup]'\n            }]\n    }], function () { return [{ type: StripeElementsService }]; }, { elements: [{\n            type: Output\n        }], elementsOptions: [{\n            type: Input\n        }], stripe: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/card-number.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass StripeCardNumberComponent {\n    /**\n     * @param {?} stripeElementsService\n     * @param {?} cardGroup\n     */\n    constructor(stripeElementsService, cardGroup) {\n        this.stripeElementsService = stripeElementsService;\n        this.cardGroup = cardGroup;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (changes.options || changes.containerClass) {\n                this.setupElement('options');\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.cardGroup) {\n            this.cardGroupSubscription = this.cardGroup.elements.subscribe((/**\n             * @param {?} elements\n             * @return {?}\n             */\n            (elements) => {\n                this.elements = elements;\n                this.setupElement('elements');\n            }));\n        }\n        else {\n            throw new Error('StripeCardNumberComponent must have StripeCardGroupDirective parent');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n        if (this.cardGroupSubscription) {\n            this.cardGroupSubscription.unsubscribe();\n        }\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    getCardNumber() {\n        return this.element;\n    }\n    /**\n     * @private\n     * @param {?} source\n     * @return {?}\n     */\n    setupElement(source) {\n        /** @type {?} */\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        if (this.element && source === 'options') {\n            this.update(options);\n        }\n        else if (this.elements && source === 'elements') {\n            this.element = this.elements.create('cardNumber', options);\n            this.element.on('change', (/**\n             * @param {?} ev\n             * @return {?}\n             */\n            (ev) => this.change.emit(ev)));\n            this.element.on('blur', (/**\n             * @return {?}\n             */\n            () => this.blur.emit()));\n            this.element.on('focus', (/**\n             * @return {?}\n             */\n            () => this.focus.emit()));\n            this.element.on('ready', (/**\n             * @return {?}\n             */\n            () => this.ready.emit()));\n            this.element.on('escape', (/**\n             * @return {?}\n             */\n            () => this.escape.emit()));\n            this.element.mount(this.stripeElementRef.nativeElement);\n            this.load.emit(this.element);\n        }\n    }\n}\nStripeCardNumberComponent.ɵfac = function StripeCardNumberComponent_Factory(t) { return new (t || StripeCardNumberComponent)(ɵngcc0.ɵɵdirectiveInject(StripeElementsService), ɵngcc0.ɵɵdirectiveInject(StripeCardGroupDirective, 8)); };\nStripeCardNumberComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: StripeCardNumberComponent, selectors: [[\"ngx-stripe-card-number\"]], viewQuery: function StripeCardNumberComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    } }, inputs: { containerClass: \"containerClass\", options: \"options\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[1, \"field\"], [\"stripeElementRef\", \"\"]], template: function StripeCardNumberComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0, 1);\n    } }, encapsulation: 2 });\n/** @nocollapse */\nStripeCardNumberComponent.ctorParameters = () => [\n    { type: StripeElementsService },\n    { type: StripeCardGroupDirective, decorators: [{ type: Optional }] }\n];\nStripeCardNumberComponent.propDecorators = {\n    stripeElementRef: [{ type: ViewChild, args: ['stripeElementRef',] }],\n    containerClass: [{ type: Input }],\n    options: [{ type: Input }],\n    load: [{ type: Output }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    focus: [{ type: Output }],\n    ready: [{ type: Output }],\n    escape: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StripeCardNumberComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-stripe-card-number',\n                template: `<div class=\"field\" #stripeElementRef></div>`\n            }]\n    }], function () { return [{ type: StripeElementsService }, { type: StripeCardGroupDirective, decorators: [{\n                type: Optional\n            }] }]; }, { load: [{\n            type: Output\n        }], blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], ready: [{\n            type: Output\n        }], escape: [{\n            type: Output\n        }], stripeElementRef: [{\n            type: ViewChild,\n            args: ['stripeElementRef']\n        }], containerClass: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/card-expiry.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass StripeCardExpiryComponent {\n    /**\n     * @param {?} stripeElementsService\n     * @param {?} cardGroup\n     */\n    constructor(stripeElementsService, cardGroup) {\n        this.stripeElementsService = stripeElementsService;\n        this.cardGroup = cardGroup;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (changes.options || changes.containerClass) {\n                this.setupElement('options');\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.cardGroup) {\n            this.cardGroupSubscription = this.cardGroup.elements.subscribe((/**\n             * @param {?} elements\n             * @return {?}\n             */\n            (elements) => {\n                this.elements = elements;\n                this.setupElement('elements');\n            }));\n        }\n        else {\n            throw new Error('StripeCardExpiryComponent must have StripeCardGroupDirective parent');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n        if (this.cardGroupSubscription) {\n            this.cardGroupSubscription.unsubscribe();\n        }\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    getCardExpiry() {\n        return this.element;\n    }\n    /**\n     * @private\n     * @param {?} source\n     * @return {?}\n     */\n    setupElement(source) {\n        /** @type {?} */\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        if (this.element && source === 'options') {\n            this.update(options);\n        }\n        else if (this.elements && source === 'elements') {\n            this.element = this.elements.create('cardExpiry', options);\n            this.element.on('change', (/**\n             * @param {?} ev\n             * @return {?}\n             */\n            (ev) => this.change.emit(ev)));\n            this.element.on('blur', (/**\n             * @return {?}\n             */\n            () => this.blur.emit()));\n            this.element.on('focus', (/**\n             * @return {?}\n             */\n            () => this.focus.emit()));\n            this.element.on('ready', (/**\n             * @return {?}\n             */\n            () => this.ready.emit()));\n            this.element.on('escape', (/**\n             * @return {?}\n             */\n            () => this.escape.emit()));\n            this.element.mount(this.stripeElementRef.nativeElement);\n            this.load.emit(this.element);\n        }\n    }\n}\nStripeCardExpiryComponent.ɵfac = function StripeCardExpiryComponent_Factory(t) { return new (t || StripeCardExpiryComponent)(ɵngcc0.ɵɵdirectiveInject(StripeElementsService), ɵngcc0.ɵɵdirectiveInject(StripeCardGroupDirective, 8)); };\nStripeCardExpiryComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: StripeCardExpiryComponent, selectors: [[\"ngx-stripe-card-expiry\"]], viewQuery: function StripeCardExpiryComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    } }, inputs: { containerClass: \"containerClass\", options: \"options\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[1, \"field\"], [\"stripeElementRef\", \"\"]], template: function StripeCardExpiryComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0, 1);\n    } }, encapsulation: 2 });\n/** @nocollapse */\nStripeCardExpiryComponent.ctorParameters = () => [\n    { type: StripeElementsService },\n    { type: StripeCardGroupDirective, decorators: [{ type: Optional }] }\n];\nStripeCardExpiryComponent.propDecorators = {\n    stripeElementRef: [{ type: ViewChild, args: ['stripeElementRef',] }],\n    containerClass: [{ type: Input }],\n    options: [{ type: Input }],\n    load: [{ type: Output }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    focus: [{ type: Output }],\n    ready: [{ type: Output }],\n    escape: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StripeCardExpiryComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-stripe-card-expiry',\n                template: `<div class=\"field\" #stripeElementRef></div>`\n            }]\n    }], function () { return [{ type: StripeElementsService }, { type: StripeCardGroupDirective, decorators: [{\n                type: Optional\n            }] }]; }, { load: [{\n            type: Output\n        }], blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], ready: [{\n            type: Output\n        }], escape: [{\n            type: Output\n        }], stripeElementRef: [{\n            type: ViewChild,\n            args: ['stripeElementRef']\n        }], containerClass: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/card-cvc.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass StripeCardCvcComponent {\n    /**\n     * @param {?} stripeElementsService\n     * @param {?} cardGroup\n     */\n    constructor(stripeElementsService, cardGroup) {\n        this.stripeElementsService = stripeElementsService;\n        this.cardGroup = cardGroup;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (changes.options || changes.containerClass) {\n                this.setupElement('options');\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.cardGroup) {\n            this.cardGroupSubscription = this.cardGroup.elements.subscribe((/**\n             * @param {?} elements\n             * @return {?}\n             */\n            (elements) => {\n                this.elements = elements;\n                this.setupElement('elements');\n            }));\n        }\n        else {\n            throw new Error('StripeCardCvcComponent must have StripeCardGroupDirective parent');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n        if (this.cardGroupSubscription) {\n            this.cardGroupSubscription.unsubscribe();\n        }\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    getCardCvc() {\n        return this.element;\n    }\n    /**\n     * @private\n     * @param {?} source\n     * @return {?}\n     */\n    setupElement(source) {\n        /** @type {?} */\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        if (this.element && source === 'options') {\n            this.update(options);\n        }\n        else if (this.elements && source === 'elements') {\n            this.element = this.elements.create('cardCvc', options);\n            this.element.on('change', (/**\n             * @param {?} ev\n             * @return {?}\n             */\n            (ev) => this.change.emit(ev)));\n            this.element.on('blur', (/**\n             * @return {?}\n             */\n            () => this.blur.emit()));\n            this.element.on('focus', (/**\n             * @return {?}\n             */\n            () => this.focus.emit()));\n            this.element.on('ready', (/**\n             * @return {?}\n             */\n            () => this.ready.emit()));\n            this.element.on('escape', (/**\n             * @return {?}\n             */\n            () => this.escape.emit()));\n            this.element.mount(this.stripeElementRef.nativeElement);\n            this.load.emit(this.element);\n        }\n    }\n}\nStripeCardCvcComponent.ɵfac = function StripeCardCvcComponent_Factory(t) { return new (t || StripeCardCvcComponent)(ɵngcc0.ɵɵdirectiveInject(StripeElementsService), ɵngcc0.ɵɵdirectiveInject(StripeCardGroupDirective, 8)); };\nStripeCardCvcComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: StripeCardCvcComponent, selectors: [[\"ngx-stripe-card-cvc\"]], viewQuery: function StripeCardCvcComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    } }, inputs: { containerClass: \"containerClass\", options: \"options\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[1, \"field\"], [\"stripeElementRef\", \"\"]], template: function StripeCardCvcComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0, 1);\n    } }, encapsulation: 2 });\n/** @nocollapse */\nStripeCardCvcComponent.ctorParameters = () => [\n    { type: StripeElementsService },\n    { type: StripeCardGroupDirective, decorators: [{ type: Optional }] }\n];\nStripeCardCvcComponent.propDecorators = {\n    stripeElementRef: [{ type: ViewChild, args: ['stripeElementRef',] }],\n    containerClass: [{ type: Input }],\n    options: [{ type: Input }],\n    load: [{ type: Output }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    focus: [{ type: Output }],\n    ready: [{ type: Output }],\n    escape: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StripeCardCvcComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-stripe-card-cvc',\n                template: `<div class=\"field\" #stripeElementRef></div>`\n            }]\n    }], function () { return [{ type: StripeElementsService }, { type: StripeCardGroupDirective, decorators: [{\n                type: Optional\n            }] }]; }, { load: [{\n            type: Output\n        }], blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], ready: [{\n            type: Output\n        }], escape: [{\n            type: Output\n        }], stripeElementRef: [{\n            type: ViewChild,\n            args: ['stripeElementRef']\n        }], containerClass: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/fpx-bank.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass StripeFpxBankComponent {\n    /**\n     * @param {?} stripeElementsService\n     */\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = 'starting';\n            /** @type {?} */\n            const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n            /** @type {?} */\n            let updateElements = false;\n            if (changes.elementsOptions || changes.stripe || !this.elements) {\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe, this.elementsOptions)\n                    .toPromise();\n                updateElements = true;\n            }\n            if (changes.options ||\n                changes.containerClass ||\n                !this.element ||\n                updateElements) {\n                if (this.element && !updateElements) {\n                    this.update(options);\n                }\n                else if (this.elements && updateElements) {\n                    this.createElement(options);\n                }\n            }\n            this.state = 'ready';\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state === 'notready') {\n                this.state = 'starting';\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe)\n                    .toPromise();\n                this.createElement();\n                this.state = 'ready';\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    getFpxBank() {\n        return this.element;\n    }\n    /**\n     * @private\n     * @param {?=} options\n     * @return {?}\n     */\n    createElement(options = { accountHolderType: 'individual' }) {\n        this.element = this.elements.create('fpxBank', options);\n        this.element.on('change', (/**\n         * @param {?} ev\n         * @return {?}\n         */\n        (ev) => this.change.emit(ev)));\n        this.element.on('blur', (/**\n         * @return {?}\n         */\n        () => this.blur.emit()));\n        this.element.on('focus', (/**\n         * @return {?}\n         */\n        () => this.focus.emit()));\n        this.element.on('ready', (/**\n         * @return {?}\n         */\n        () => this.ready.emit()));\n        this.element.on('escape', (/**\n         * @return {?}\n         */\n        () => this.escape.emit()));\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripeFpxBankComponent.ɵfac = function StripeFpxBankComponent_Factory(t) { return new (t || StripeFpxBankComponent)(ɵngcc0.ɵɵdirectiveInject(StripeElementsService)); };\nStripeFpxBankComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: StripeFpxBankComponent, selectors: [[\"ngx-stripe-fpx-bank\"]], viewQuery: function StripeFpxBankComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    } }, inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[1, \"field\"], [\"stripeElementRef\", \"\"]], template: function StripeFpxBankComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0, 1);\n    } }, encapsulation: 2 });\n/** @nocollapse */\nStripeFpxBankComponent.ctorParameters = () => [\n    { type: StripeElementsService }\n];\nStripeFpxBankComponent.propDecorators = {\n    stripeElementRef: [{ type: ViewChild, args: ['stripeElementRef',] }],\n    containerClass: [{ type: Input }],\n    options: [{ type: Input }],\n    elementsOptions: [{ type: Input }],\n    stripe: [{ type: Input }],\n    load: [{ type: Output }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    focus: [{ type: Output }],\n    ready: [{ type: Output }],\n    escape: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StripeFpxBankComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-stripe-fpx-bank',\n                template: `<div class=\"field\" #stripeElementRef></div>`\n            }]\n    }], function () { return [{ type: StripeElementsService }]; }, { load: [{\n            type: Output\n        }], blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], ready: [{\n            type: Output\n        }], escape: [{\n            type: Output\n        }], stripeElementRef: [{\n            type: ViewChild,\n            args: ['stripeElementRef']\n        }], containerClass: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }], elementsOptions: [{\n            type: Input\n        }], stripe: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/ideal-bank.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass StripeIdealBankComponent {\n    /**\n     * @param {?} stripeElementsService\n     */\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = 'starting';\n            /** @type {?} */\n            const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n            /** @type {?} */\n            let updateElements = false;\n            if (changes.elementsOptions || changes.stripe || !this.elements) {\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe, this.elementsOptions)\n                    .toPromise();\n                updateElements = true;\n            }\n            if (changes.options ||\n                changes.containerClass ||\n                !this.element ||\n                updateElements) {\n                if (this.element && !updateElements) {\n                    this.update(options);\n                }\n                else if (this.elements && updateElements) {\n                    this.createElement(options);\n                }\n            }\n            this.state = 'ready';\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state === 'notready') {\n                this.state = 'starting';\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe)\n                    .toPromise();\n                this.createElement();\n                this.state = 'ready';\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    getIdealBank() {\n        return this.element;\n    }\n    /**\n     * @private\n     * @param {?=} options\n     * @return {?}\n     */\n    createElement(options = {}) {\n        this.element = this.elements.create('idealBank', options);\n        this.element.on('change', (/**\n         * @param {?} ev\n         * @return {?}\n         */\n        (ev) => this.change.emit(ev)));\n        this.element.on('blur', (/**\n         * @return {?}\n         */\n        () => this.blur.emit()));\n        this.element.on('focus', (/**\n         * @return {?}\n         */\n        () => this.focus.emit()));\n        this.element.on('ready', (/**\n         * @return {?}\n         */\n        () => this.ready.emit()));\n        this.element.on('escape', (/**\n         * @return {?}\n         */\n        () => this.escape.emit()));\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripeIdealBankComponent.ɵfac = function StripeIdealBankComponent_Factory(t) { return new (t || StripeIdealBankComponent)(ɵngcc0.ɵɵdirectiveInject(StripeElementsService)); };\nStripeIdealBankComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: StripeIdealBankComponent, selectors: [[\"ngx-stripe-ideal-bank\"]], viewQuery: function StripeIdealBankComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    } }, inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[1, \"field\"], [\"stripeElementRef\", \"\"]], template: function StripeIdealBankComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0, 1);\n    } }, encapsulation: 2 });\n/** @nocollapse */\nStripeIdealBankComponent.ctorParameters = () => [\n    { type: StripeElementsService }\n];\nStripeIdealBankComponent.propDecorators = {\n    stripeElementRef: [{ type: ViewChild, args: ['stripeElementRef',] }],\n    containerClass: [{ type: Input }],\n    options: [{ type: Input }],\n    elementsOptions: [{ type: Input }],\n    stripe: [{ type: Input }],\n    load: [{ type: Output }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    focus: [{ type: Output }],\n    ready: [{ type: Output }],\n    escape: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StripeIdealBankComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-stripe-ideal-bank',\n                template: `<div class=\"field\" #stripeElementRef></div>`\n            }]\n    }], function () { return [{ type: StripeElementsService }]; }, { load: [{\n            type: Output\n        }], blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], ready: [{\n            type: Output\n        }], escape: [{\n            type: Output\n        }], stripeElementRef: [{\n            type: ViewChild,\n            args: ['stripeElementRef']\n        }], containerClass: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }], elementsOptions: [{\n            type: Input\n        }], stripe: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/iban.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass StripeIbanComponent {\n    /**\n     * @param {?} stripeElementsService\n     */\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = 'starting';\n            /** @type {?} */\n            const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n            /** @type {?} */\n            let updateElements = false;\n            if (changes.elementsOptions || changes.stripe || !this.elements) {\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe, this.elementsOptions)\n                    .toPromise();\n                updateElements = true;\n            }\n            if (changes.options ||\n                changes.containerClass ||\n                !this.element ||\n                updateElements) {\n                if (this.element && !updateElements) {\n                    this.update(options);\n                }\n                else if (this.elements && updateElements) {\n                    this.createElement(options);\n                }\n            }\n            this.state = 'ready';\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state === 'notready') {\n                this.state = 'starting';\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe)\n                    .toPromise();\n                this.createElement();\n                this.state = 'ready';\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    getIban() {\n        return this.element;\n    }\n    /**\n     * @private\n     * @param {?=} options\n     * @return {?}\n     */\n    createElement(options = {}) {\n        this.element = this.elements.create('iban', options);\n        this.element.on('change', (/**\n         * @param {?} ev\n         * @return {?}\n         */\n        (ev) => this.change.emit(ev)));\n        this.element.on('blur', (/**\n         * @return {?}\n         */\n        () => this.blur.emit()));\n        this.element.on('focus', (/**\n         * @return {?}\n         */\n        () => this.focus.emit()));\n        this.element.on('ready', (/**\n         * @return {?}\n         */\n        () => this.ready.emit()));\n        this.element.on('escape', (/**\n         * @return {?}\n         */\n        () => this.escape.emit()));\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripeIbanComponent.ɵfac = function StripeIbanComponent_Factory(t) { return new (t || StripeIbanComponent)(ɵngcc0.ɵɵdirectiveInject(StripeElementsService)); };\nStripeIbanComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: StripeIbanComponent, selectors: [[\"ngx-stripe-iban\"]], viewQuery: function StripeIbanComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    } }, inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[1, \"field\"], [\"stripeElementRef\", \"\"]], template: function StripeIbanComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0, 1);\n    } }, encapsulation: 2 });\n/** @nocollapse */\nStripeIbanComponent.ctorParameters = () => [\n    { type: StripeElementsService }\n];\nStripeIbanComponent.propDecorators = {\n    stripeElementRef: [{ type: ViewChild, args: ['stripeElementRef',] }],\n    containerClass: [{ type: Input }],\n    options: [{ type: Input }],\n    elementsOptions: [{ type: Input }],\n    stripe: [{ type: Input }],\n    load: [{ type: Output }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    focus: [{ type: Output }],\n    ready: [{ type: Output }],\n    escape: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StripeIbanComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-stripe-iban',\n                template: `<div class=\"field\" #stripeElementRef></div>`\n            }]\n    }], function () { return [{ type: StripeElementsService }]; }, { load: [{\n            type: Output\n        }], blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], ready: [{\n            type: Output\n        }], escape: [{\n            type: Output\n        }], stripeElementRef: [{\n            type: ViewChild,\n            args: ['stripeElementRef']\n        }], containerClass: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }], elementsOptions: [{\n            type: Input\n        }], stripe: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/au-bank-account.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass StripeAuBankAccountComponent {\n    /**\n     * @param {?} stripeElementsService\n     */\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = 'starting';\n            /** @type {?} */\n            const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n            /** @type {?} */\n            let updateElements = false;\n            if (changes.elementsOptions || changes.stripe || !this.elements) {\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe, this.elementsOptions)\n                    .toPromise();\n                updateElements = true;\n            }\n            if (changes.options ||\n                changes.containerClass ||\n                !this.element ||\n                updateElements) {\n                if (this.element && !updateElements) {\n                    this.update(options);\n                }\n                else if (this.elements && updateElements) {\n                    this.createElement(options);\n                }\n            }\n            this.state = 'ready';\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state === 'notready') {\n                this.state = 'starting';\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe)\n                    .toPromise();\n                this.createElement();\n                this.state = 'ready';\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    getAuBankAccount() {\n        return this.element;\n    }\n    /**\n     * @private\n     * @param {?=} options\n     * @return {?}\n     */\n    createElement(options = {}) {\n        this.element = this.elements.create('auBankAccount', options);\n        this.element.on('change', (/**\n         * @param {?} ev\n         * @return {?}\n         */\n        (ev) => this.change.emit(ev)));\n        this.element.on('blur', (/**\n         * @return {?}\n         */\n        () => this.blur.emit()));\n        this.element.on('focus', (/**\n         * @return {?}\n         */\n        () => this.focus.emit()));\n        this.element.on('ready', (/**\n         * @return {?}\n         */\n        () => this.ready.emit()));\n        this.element.on('escape', (/**\n         * @return {?}\n         */\n        () => this.escape.emit()));\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripeAuBankAccountComponent.ɵfac = function StripeAuBankAccountComponent_Factory(t) { return new (t || StripeAuBankAccountComponent)(ɵngcc0.ɵɵdirectiveInject(StripeElementsService)); };\nStripeAuBankAccountComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: StripeAuBankAccountComponent, selectors: [[\"ngx-stripe-au-bank-account\"]], viewQuery: function StripeAuBankAccountComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    } }, inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[1, \"field\"], [\"stripeElementRef\", \"\"]], template: function StripeAuBankAccountComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0, 1);\n    } }, encapsulation: 2 });\n/** @nocollapse */\nStripeAuBankAccountComponent.ctorParameters = () => [\n    { type: StripeElementsService }\n];\nStripeAuBankAccountComponent.propDecorators = {\n    stripeElementRef: [{ type: ViewChild, args: ['stripeElementRef',] }],\n    containerClass: [{ type: Input }],\n    options: [{ type: Input }],\n    elementsOptions: [{ type: Input }],\n    stripe: [{ type: Input }],\n    load: [{ type: Output }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    focus: [{ type: Output }],\n    ready: [{ type: Output }],\n    escape: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StripeAuBankAccountComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-stripe-au-bank-account',\n                template: `<div class=\"field\" #stripeElementRef></div>`\n            }]\n    }], function () { return [{ type: StripeElementsService }]; }, { load: [{\n            type: Output\n        }], blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], ready: [{\n            type: Output\n        }], escape: [{\n            type: Output\n        }], stripeElementRef: [{\n            type: ViewChild,\n            args: ['stripeElementRef']\n        }], containerClass: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }], elementsOptions: [{\n            type: Input\n        }], stripe: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/payment-request-button.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass StripePaymentRequestButtonComponent {\n    /**\n     * @param {?} stripeElementsService\n     */\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.change = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.token = new EventEmitter();\n        this.paymentMethod = new EventEmitter();\n        this.source = new EventEmitter();\n        this.cancel = new EventEmitter();\n        this.shippingaddresschange = new EventEmitter();\n        this.shippingoptionchange = new EventEmitter();\n        this.notavailable = new EventEmitter();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            /** @type {?} */\n            const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n            /** @type {?} */\n            const elementsOptions = this.elementsOptions;\n            /** @type {?} */\n            const stripe = this.stripe;\n            /** @type {?} */\n            let updateElements = false;\n            if (changes.elementsOptions || changes.stripe || !this.elements) {\n                /** @type {?} */\n                const elements = yield this.stripeElementsService\n                    .elements(stripe, elementsOptions)\n                    .toPromise();\n                this.elements = elements;\n                updateElements = true;\n            }\n            if (changes.paymentOptions && this.paymentRequest) {\n                this.updateRequest(this.paymentOptions);\n            }\n            if (changes.options ||\n                changes.containerClass ||\n                !this.element ||\n                updateElements) {\n                if (this.element && !updateElements) {\n                    this.update(options);\n                }\n                else if (this.elements && updateElements) {\n                    this.paymentRequest = this.stripeElementsService.paymentRequest(stripe, this.paymentOptions);\n                    this.paymentRequest.on('token', (/**\n                     * @param {?} ev\n                     * @return {?}\n                     */\n                    (ev) => this.token.emit(ev)));\n                    this.paymentRequest.on('paymentmethod', (/**\n                     * @param {?} ev\n                     * @return {?}\n                     */\n                    (ev) => this.paymentMethod.emit(ev)));\n                    this.paymentRequest.on('source', (/**\n                     * @param {?} ev\n                     * @return {?}\n                     */\n                    (ev) => this.source.emit(ev)));\n                    this.paymentRequest.on('cancel', (/**\n                     * @return {?}\n                     */\n                    () => this.cancel.emit()));\n                    this.paymentRequest.on('shippingaddresschange', (/**\n                     * @param {?} ev\n                     * @return {?}\n                     */\n                    (ev) => this.shippingaddresschange.emit(ev)));\n                    this.paymentRequest.on('shippingoptionchange', (/**\n                     * @param {?} ev\n                     * @return {?}\n                     */\n                    (ev) => this.shippingoptionchange.emit(ev)));\n                    this.element = this.elements.create('paymentRequestButton', Object.assign({ paymentRequest: this.paymentRequest }, options));\n                    this.canMakePayment().subscribe((/**\n                     * @param {?} result\n                     * @return {?}\n                     */\n                    (result) => {\n                        if (result) {\n                            this.element.on('click', (/**\n                             * @param {?} ev\n                             * @return {?}\n                             */\n                            (ev) => this.change.emit(ev)));\n                            this.element.on('blur', (/**\n                             * @return {?}\n                             */\n                            () => this.blur.emit()));\n                            this.element.on('focus', (/**\n                             * @return {?}\n                             */\n                            () => this.focus.emit()));\n                            this.element.on('ready', (/**\n                             * @return {?}\n                             */\n                            () => this.ready.emit()));\n                            this.element.mount(this.stripeElementRef.nativeElement);\n                            this.load.emit({\n                                paymentRequestButton: this.element,\n                                paymentRequest: this.paymentRequest\n                            });\n                        }\n                        else {\n                            this.notavailable.emit();\n                        }\n                    }));\n                }\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    canMakePayment() {\n        return from(this.paymentRequest.canMakePayment());\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    updateRequest(options) {\n        this.paymentRequest.update(options);\n    }\n    /**\n     * @return {?}\n     */\n    show() {\n        this.paymentRequest.show();\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    getButton() {\n        return this.element;\n    }\n}\nStripePaymentRequestButtonComponent.ɵfac = function StripePaymentRequestButtonComponent_Factory(t) { return new (t || StripePaymentRequestButtonComponent)(ɵngcc0.ɵɵdirectiveInject(StripeElementsService)); };\nStripePaymentRequestButtonComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: StripePaymentRequestButtonComponent, selectors: [[\"ngx-stripe-payment-request-button\"]], viewQuery: function StripePaymentRequestButtonComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    } }, inputs: { containerClass: \"containerClass\", paymentOptions: \"paymentOptions\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", change: \"change\", blur: \"blur\", focus: \"focus\", ready: \"ready\", token: \"token\", paymentMethod: \"paymentMethod\", source: \"source\", cancel: \"cancel\", shippingaddresschange: \"shippingaddresschange\", shippingoptionchange: \"shippingoptionchange\", notavailable: \"notavailable\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[1, \"field\"], [\"stripeElementRef\", \"\"]], template: function StripePaymentRequestButtonComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0, 1);\n    } }, encapsulation: 2 });\n/** @nocollapse */\nStripePaymentRequestButtonComponent.ctorParameters = () => [\n    { type: StripeElementsService }\n];\nStripePaymentRequestButtonComponent.propDecorators = {\n    stripeElementRef: [{ type: ViewChild, args: ['stripeElementRef',] }],\n    containerClass: [{ type: Input }],\n    paymentOptions: [{ type: Input }],\n    options: [{ type: Input }],\n    elementsOptions: [{ type: Input }],\n    stripe: [{ type: Input }],\n    load: [{ type: Output }],\n    change: [{ type: Output }],\n    blur: [{ type: Output }],\n    focus: [{ type: Output }],\n    ready: [{ type: Output }],\n    token: [{ type: Output }],\n    paymentMethod: [{ type: Output }],\n    source: [{ type: Output }],\n    cancel: [{ type: Output }],\n    shippingaddresschange: [{ type: Output }],\n    shippingoptionchange: [{ type: Output }],\n    notavailable: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StripePaymentRequestButtonComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-stripe-payment-request-button',\n                template: `<div class=\"field\" #stripeElementRef></div>`\n            }]\n    }], function () { return [{ type: StripeElementsService }]; }, { load: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], blur: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], ready: [{\n            type: Output\n        }], token: [{\n            type: Output\n        }], paymentMethod: [{\n            type: Output\n        }], source: [{\n            type: Output\n        }], cancel: [{\n            type: Output\n        }], shippingaddresschange: [{\n            type: Output\n        }], shippingoptionchange: [{\n            type: Output\n        }], notavailable: [{\n            type: Output\n        }], stripeElementRef: [{\n            type: ViewChild,\n            args: ['stripeElementRef']\n        }], containerClass: [{\n            type: Input\n        }], paymentOptions: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }], elementsOptions: [{\n            type: Input\n        }], stripe: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/services/stripe-factory.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass StripeFactoryService {\n    /**\n     * @param {?} baseKey\n     * @param {?} baseOptions\n     * @param {?} loader\n     * @param {?} window\n     */\n    constructor(baseKey, baseOptions, loader, window) {\n        this.baseKey = baseKey;\n        this.baseOptions = baseOptions;\n        this.loader = loader;\n        this.window = window;\n    }\n    /**\n     * @param {?=} key\n     * @param {?=} options\n     * @return {?}\n     */\n    create(key, options) {\n        if (!key && !this.baseKey) {\n            return null;\n        }\n        return new StripeInstance(this.loader, this.window, key || this.baseKey, options || this.baseOptions);\n    }\n}\nStripeFactoryService.ɵfac = function StripeFactoryService_Factory(t) { return new (t || StripeFactoryService)(ɵngcc0.ɵɵinject(STRIPE_PUBLISHABLE_KEY), ɵngcc0.ɵɵinject(STRIPE_OPTIONS), ɵngcc0.ɵɵinject(LazyStripeAPILoader), ɵngcc0.ɵɵinject(WindowRef)); };\nStripeFactoryService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: StripeFactoryService, factory: StripeFactoryService.ɵfac });\n/** @nocollapse */\nStripeFactoryService.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [STRIPE_PUBLISHABLE_KEY,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [STRIPE_OPTIONS,] }] },\n    { type: LazyStripeAPILoader },\n    { type: WindowRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StripeFactoryService, [{\n        type: Injectable\n    }], function () { return [{ type: String, decorators: [{\n                type: Inject,\n                args: [STRIPE_PUBLISHABLE_KEY]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [STRIPE_OPTIONS]\n            }] }, { type: LazyStripeAPILoader }, { type: WindowRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ngx-stripe.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst components = [\n    StripeCardComponent,\n    StripeCardNumberComponent,\n    StripeCardExpiryComponent,\n    StripeCardCvcComponent,\n    StripeFpxBankComponent,\n    StripeIdealBankComponent,\n    StripeIbanComponent,\n    StripeAuBankAccountComponent,\n    StripePaymentRequestButtonComponent\n];\n/** @type {?} */\nconst directives = [StripeCardGroupDirective];\nclass NgxStripeModule {\n    /**\n     * @param {?=} publishableKey\n     * @param {?=} options\n     * @return {?}\n     */\n    static forRoot(publishableKey, options) {\n        return {\n            ngModule: NgxStripeModule,\n            providers: [\n                LazyStripeAPILoader,\n                StripeService,\n                StripeFactoryService,\n                StripeElementsService,\n                WindowRef,\n                DocumentRef,\n                {\n                    provide: STRIPE_PUBLISHABLE_KEY,\n                    useValue: publishableKey\n                },\n                {\n                    provide: STRIPE_OPTIONS,\n                    useValue: options\n                }\n            ]\n        };\n    }\n    /**\n     * @param {?=} publishableKey\n     * @param {?=} options\n     * @return {?}\n     */\n    static forChild(publishableKey, options) {\n        return {\n            ngModule: NgxStripeModule,\n            providers: [\n                LazyStripeAPILoader,\n                StripeService,\n                StripeFactoryService,\n                StripeElementsService,\n                WindowRef,\n                DocumentRef,\n                {\n                    provide: STRIPE_PUBLISHABLE_KEY,\n                    useValue: publishableKey\n                },\n                {\n                    provide: STRIPE_OPTIONS,\n                    useValue: options\n                }\n            ]\n        };\n    }\n}\nNgxStripeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxStripeModule });\nNgxStripeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxStripeModule_Factory(t) { return new (t || NgxStripeModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxStripeModule, { declarations: [StripeCardComponent, StripeCardNumberComponent, StripeCardExpiryComponent, StripeCardCvcComponent, StripeFpxBankComponent, StripeIdealBankComponent, StripeIbanComponent, StripeAuBankAccountComponent, StripePaymentRequestButtonComponent, StripeCardGroupDirective], exports: [StripeCardComponent, StripeCardNumberComponent, StripeCardExpiryComponent, StripeCardCvcComponent, StripeFpxBankComponent, StripeIdealBankComponent, StripeIbanComponent, StripeAuBankAccountComponent, StripePaymentRequestButtonComponent, StripeCardGroupDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxStripeModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [...components, ...directives],\n                exports: [...components, ...directives]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ngx-stripe.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NgxStripeModule, StripeCardComponent, StripeCardNumberComponent, StripeCardExpiryComponent, StripeCardCvcComponent, StripeFpxBankComponent, StripeIbanComponent, StripeIdealBankComponent, StripeAuBankAccountComponent, StripePaymentRequestButtonComponent, StripeCardGroupDirective, StripeService, StripeFactoryService, StripeInstance, LazyStripeAPILoader, StripeElementsService, WindowRef, DocumentRef, STRIPE_PUBLISHABLE_KEY, STRIPE_OPTIONS };\n\n//# sourceMappingURL=ngx-stripe.js.map","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Pago } from '@app/shared/models/pago';\nimport { Pedido } from '@app/shared/models/pedido';\nimport { PaypalService } from '@app/shared/paypal.service';\nimport { AuthCrudService } from '@app/shared/services/authCrud.service';\nimport { MessageService } from '@app/shared/services/message.service';\nimport { ProductoService } from '@app/shared/services/producto.service';\nimport { ValorService } from '@app/shared/services/valor.service';\nimport Swal from 'sweetalert2';\nimport { AuthService } from '../auth/auth.service';\n\ndeclare var paypal;\n\n\n@Component({\n  selector: 'app-paypal',\n  templateUrl: './paypal.component.html',\n  styleUrls: ['./paypal.component.scss']\n})\nexport class PaypalComponent implements OnInit {\n  @ViewChild('paypal', {static: true}) paypalElement : ElementRef;\n  \n  pedido: Pedido = {\n\n    cliente: null,\n    estado: null,\n    fecha: null,\n    id: null,\n    precioTotal: null,\n    productos: null,\n    valoracion: null,\n    CorreoClient: null\n   \n  }\n  uid = '';\n\n  pago:Pago;\n\n  constructor(private paypalSvc: PaypalService,    private authAf: AuthService,\n     private firestore: AuthCrudService,private router: Router,\n     private message: MessageService,\n     private cantidaSvc: ValorService) {\n\n    this.pedido = paypalSvc.getPedidoPaypal();\n\n   \n\n    this.authAf.afAuth.user.subscribe(res => {\n\n      this.uid = res.uid;\n\n    });\n\n   }\n\n  ngOnInit(){\n\n    paypal.\n    Buttons({\n      createOrder: (data, actions) => {\n         \n        \n        return actions.order.create({\n\n         \n          purchase_units: [{\n\n          \n            description: this.pedido.fecha,\n            amount: {\n\n              currency_code: \"USD\",\n              value: this.pedido.precioTotal\n\n\n            }\n\n          }]\n        })\n      },\n      onApprove : async (data, actions) => {\n        const order = await actions.order.capture();\n        console.log(order);\n\n        if(order){\n\n          const valor = this.cantidaSvc.getValorTotal();\n\n          const pathT = `clientes/${this.uid}/pedidos`;\n  \n          this.firestore.create<Pedido>(this.pedido,pathT,this.pedido.id).then(() => {\n           this.message.sendMessage(this.pedido).subscribe(() => {\n\n           });\n           console.log('pedido guardado');\n           \n           const path = 'pagos';\n\n        var fecha = new Date()\n        const fechaT = ((fecha.getDate())+'/'+(1+fecha.getMonth())) +'/'+fecha.getFullYear();\n        \n\n       this.pago = {\n\n        idtokenTargeta: order.id,\n        cantidad: valor,\n        idCliente: this.uid,\n        fecha: fechaT\n\n       }\n       this.firestore.doc<Pago>(this.pago,path).then(res => {\n\n        console.log(res);\n\n        Swal.fire('transaccion exitosa').then(() => {\n\n          this.router.navigate(['/home']);\n         })\n\n      }).catch(() => {\n\n\n        Swal.fire('¡transaccion fallida! porfavor intente de nuevo').then(() => {\n\n          this.router.navigate(['/home'])\n        });\n      });\n          \n          });\n        }\n      },\n      onError: err =>  {\n\n        Swal.fire('¡transaccion fallida! por favor comenzar de nuevo').then(() => {\n\n          this.router.navigate(['/home']);\n\n        });\n      }\n    })\n    .render( this.paypalElement.nativeElement);\n}\n\n}\n\n\n","\n<div #paypal></div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SelectTargetaRoutingModule } from './select-targeta-routing.module';\nimport { SelectTargetaComponent } from './select-targeta.component';\nimport {MaterialModule} from '../../../material.module';\nimport {NgxStripeModule} from 'ngx-stripe';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport { from } from 'rxjs';\nimport {PaypalComponent} from '../../paypal/paypal.component';\n\n@NgModule({\n  declarations: [SelectTargetaComponent,PaypalComponent],\n  imports: [\n    CommonModule,\n    SelectTargetaRoutingModule,\n    MaterialModule,\n    NgxStripeModule.forRoot('pk_test_51IGVrnLKdggzOCEi8qk71PNMEBpdgtJx8EQCuNkgQyVA5BsYOb1ic5xoZPddZrfzRFUazK7rSl8jyZDUbDjjnNLn00vKfEDZvg'),\n    ReactiveFormsModule\n  ]\n})\nexport class SelectTargetaModule { }\n"],"sourceRoot":"webpack:///"}